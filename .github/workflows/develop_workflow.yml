name: Feature to Develop Automation Workflow

on:
  pull_request:
    branches:
      - "develop"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    - name: Create .env file
      run: |
        cd client
        echo "${{ vars.ENV }}" > .env

    - name: Install dependencies (Next.js)
      run: |
        cd client
        npm ci --legacy-peer-deps

    - name: Build Next.js application
      run: |
        cd client
        npm run build

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build Go application
      run: |
        cd server
        go build -v ./...

    - name: Run Go tests
      run: |
        cd server
        go test -v ./...

  auto-merge:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && success()
    
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
    
        - name: Auto Merge PR
          uses: actions/github-script@v7
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const PullRequestService = require('./.github/actions/services/PullRequestService');
              const MergeService = require('./.github/actions/services/MergeService');
    
              async function run() {
                const prService = new PullRequestService(github, context);
                const mergeService = new MergeService(github, context);
    
                try {
                  const { data: pullRequest } = await prService.getPullRequest(context.payload.pull_request.number);
                  const validation = prService.validatePullRequest(pullRequest);
                  await mergeService.mergePullRequest(context.payload.pull_request.number, validation);
                  
                  console.log(`PR #${context.payload.pull_request.number} merged successfully`);
                } catch (error) {
                  console.error('Merge process error:', error);
                  core.setFailed(error.message);
                }
              }
    
              run();